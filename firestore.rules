// 📁 firestore.rules
// ═══════════════════════════════════════════════════════════════════
// 🛡️ NURSEOS V2 FIRESTORE SECURITY RULES - FIXED NO CIRCULAR DEPS
// ═══════════════════════════════════════════════════════════════════

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ═══════════════════════════════════════════════════════════════════
    // 🔧 HELPER FUNCTIONS - NO CIRCULAR DEPENDENCIES
    // ═══════════════════════════════════════════════════════════════════

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // ❌ REMOVED: getUserRole() - this caused circular dependency
    // ✅ Using direct role checks in specific rules instead

    // ═══════════════════════════════════════════════════════════════════
    // 👤 USER PROFILES & AUTHENTICATION
    // ═══════════════════════════════════════════════════════════════════

    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if false; // Never allow user deletion
    }

    // ═══════════════════════════════════════════════════════════════════
    // 📊 WORK HISTORY & SESSIONS
    // ═══════════════════════════════════════════════════════════════════

    match /users/{userId}/workHistory/{sessionId} {
      allow read, write: if isOwner(userId);
      allow delete: if false; // Audit trail protection
    }

    // ═══════════════════════════════════════════════════════════════════
    // 🏥 PATIENT RECORDS - SIMPLIFIED ACCESS
    // ═══════════════════════════════════════════════════════════════════

    match /patients/{patientId} {
      // Any authenticated user can access (simplified for now)
      allow read, write: if isAuthenticated();
      allow delete: if false; // HIPAA compliance - no deletion
    }

    // Patient vitals sub-collection
    match /patients/{patientId}/vitals/{vitalId} {
      allow read, write: if isAuthenticated();
      allow delete: if false;
    }

    // Patient notes sub-collection
    match /patients/{patientId}/notes/{noteId} {
      allow read, write: if isAuthenticated();
      allow delete: if false;
    }

    // ═══════════════════════════════════════════════════════════════════
    // 🕒 SHIFT SCHEDULING SYSTEM - SIMPLIFIED PERMISSIONS
    // ═══════════════════════════════════════════════════════════════════

    match /shifts/{shiftId} {
      // Any authenticated user can read shifts
      allow read: if isAuthenticated();
      
      // Any authenticated user can request shifts (update requestedBy)
      allow update: if isAuthenticated() && 
        request.resource.data.diff(resource.data).affectedKeys() == ['requestedBy'].toSet();
      
      // For now, allow authenticated users to create/modify shifts
      // TODO: Restrict to admins once role system is stable
      allow create, delete: if isAuthenticated();
      allow update: if isAuthenticated();
    }

    // ═══════════════════════════════════════════════════════════════════
    // 🔔 NOTIFICATIONS
    // ═══════════════════════════════════════════════════════════════════

    match /users/{userId}/notifications/{notificationId} {
      allow read: if isOwner(userId);
      allow update: if isOwner(userId); // Mark as read
      allow create, delete: if false; // System managed
    }

    // ═══════════════════════════════════════════════════════════════════
    // 🏅 GAMIFICATION SYSTEM
    // ═══════════════════════════════════════════════════════════════════

    match /users/{userId}/xpHistory/{xpId} {
      allow read: if isOwner(userId);
      allow write: if false; // System managed only
    }

    match /leaderboards/{boardId} {
      allow read: if isAuthenticated();
      allow write: if false; // System managed
    }

    // XP transactions for audit
    match /users/{userId}/xpTransactions/{transactionId} {
      allow read: if isOwner(userId);
      allow write: if false; // System managed
    }

    // ═══════════════════════════════════════════════════════════════════
    // ⚙️ USER PREFERENCES
    // ═══════════════════════════════════════════════════════════════════

    match /users/{userId}/preferences/{preferenceType} {
      allow read, write: if isOwner(userId);
      allow delete: if false; // Keep preference history
    }

    // ═══════════════════════════════════════════════════════════════════
    // 🏢 AGENCY & ORGANIZATION DATA
    // ═══════════════════════════════════════════════════════════════════

    match /agencies/{agencyId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // Simplified for now
    }

    // Agency-specific shifts
    match /agencies/{agencyId}/shifts/{shiftId} {
      allow read: if isAuthenticated();
      allow update: if isAuthenticated() && 
        request.resource.data.diff(resource.data).affectedKeys() == ['requestedBy'].toSet();
      allow create, delete: if isAuthenticated();
    }

    // ═══════════════════════════════════════════════════════════════════
    // 🔧 SYSTEM COLLECTIONS - CRITICAL FIX
    // ═══════════════════════════════════════════════════════════════════

    // Migration status - ALLOW ALL AUTHENTICATED USERS TO READ
    match /system/{docId} {
      allow read: if isAuthenticated();
      allow write: if false; // Admin console only
    }

    // App configuration
    match /config/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // Simplified for now
    }

    // Feature flags
    match /features/{featureId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // Simplified for now
    }

    // ═══════════════════════════════════════════════════════════════════
    // 📊 ANALYTICS & LOGGING
    // ═══════════════════════════════════════════════════════════════════

    match /analytics/{eventId} {
      allow create: if isAuthenticated(); // Log events
      allow read, update, delete: if false; // Analytics only
    }

    // Error logs
    match /errors/{errorId} {
      allow create: if isAuthenticated(); // Report errors
      allow read, update, delete: if isAuthenticated(); // Allow debugging
    }

    // ═══════════════════════════════════════════════════════════════════
    // 🎯 TESTING & DEVELOPMENT COLLECTIONS
    // ═══════════════════════════════════════════════════════════════════

    // Test data generation
    match /test/{docId} {
      allow read, write: if isAuthenticated();
    }

    match /testUsers/{userId} {
      allow read, write: if isAuthenticated();
    }

    match /testShifts/{shiftId} {
      allow read, write: if isAuthenticated();
    }

    match /testPatients/{patientId} {
      allow read, write: if isAuthenticated();
    }

    // ═══════════════════════════════════════════════════════════════════
    // 📱 APP METADATA (NO RESTRICTIONS FOR DEVELOPMENT)
    // ═══════════════════════════════════════════════════════════════════

    match /appConfig/{docId} {
      allow read, write: if isAuthenticated();
    }

    match /maintenance/{docId} {
      allow read, write: if isAuthenticated();
    }

    // ═══════════════════════════════════════════════════════════════════
    // 🚫 CATCH-ALL - ALLOW AUTHENTICATED ACCESS FOR DEVELOPMENT
    // ═══════════════════════════════════════════════════════════════════

    // During development phase, allow authenticated users broad access
    // TODO: Tighten this in production
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}